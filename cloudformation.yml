AWSTemplateFormatVersion: "2010-09-09"
Description: "cloudformation template for assignment2"
Resources:
    LambdaFunction:
        Type: "AWS::Lambda::Function"
        DeletionPolicy: Retain
        Properties:
            Description: ""
            FunctionName: !Sub "LF2-search-${OpenSearchServiceDomain}"
            Handler: "lambda_function.lambda_handler"
            Architectures: 
              - "x86_64"
            Code: 
                S3Bucket: "prod-iad-c1-djusa-tasks"
                S3Key: !Sub "/snapshots/${AWS::AccountId}/LF2-search-${OpenSearchServiceDomain}-de81f867-c41f-429c-8315-5834fe32cf66"
                S3ObjectVersion: "1vo.8gzo8ifh_n_F8l97TON26c8v3TjB"
            MemorySize: 128
            Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/LF2-search-${OpenSearchServiceDomain}-role-wchyfphx"
            Runtime: "python3.9"
            Timeout: 30
            TracingConfig: 
                Mode: "PassThrough"
            EphemeralStorage: 
                Size: 512

    LambdaFunction2:
        Type: "AWS::Lambda::Function"
        DeletionPolicy: Retain
        Properties:
            Description: ""
            FunctionName: !Sub "LF1-index-${OpenSearchServiceDomain}"
            Handler: "lambda_function.lambda_handler"
            Architectures: 
              - "x86_64"
            Code: 
                S3Bucket: "prod-iad-c1-djusa-tasks"
                S3Key: !Sub "/snapshots/${AWS::AccountId}/LF1-index-${OpenSearchServiceDomain}-774fcae5-1c98-4f1c-b74d-abbf5543a438"
                S3ObjectVersion: "wE6cbprN_ggM3AClo.dRFnWwMQjM60lg"
            MemorySize: 128
            Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/LF1-index-${OpenSearchServiceDomain}-role-nxrfmdcc"
            Runtime: "python3.9"
            Timeout: 30
            TracingConfig: 
                Mode: "PassThrough"
            EphemeralStorage: 
                Size: 512

    S3Bucket:
        Type: "AWS::S3::Bucket"
        DeletionPolicy: Retain
        Properties:
            BucketName: "b1-dc4676"
            CorsConfiguration: 
                CorsRules: 
                  - 
                    AllowedHeaders: 
                      - "*"
                    AllowedMethods: 
                      - "PUT"
                      - "POST"
                      - "DELETE"
                      - "GET"
                      - "HEAD"
                    AllowedOrigins: 
                      - "*"
                      - !Sub "http://b1-dc4676.s3-website-${AWS::Region}.amazonaws.com/*"
            WebsiteConfiguration: 
                IndexDocument: "index.html"
                ErrorDocument: "index.html"

    S3Bucket2:
        Type: "AWS::S3::Bucket"
        DeletionPolicy: Retain
        Properties:
            BucketName: "b2-dc4676"
            BucketEncryption: 
                ServerSideEncryptionConfiguration: 
                  - 
                    ServerSideEncryptionByDefault: 
                        SSEAlgorithm: "AES256"
                    BucketKeyEnabled: false
            CorsConfiguration: 
                CorsRules: 
                  - 
                    AllowedHeaders: 
                      - "*"
                    AllowedMethods: 
                      - "PUT"
                      - "POST"
                      - "DELETE"
                      - "GET"
                      - "HEAD"
                    AllowedOrigins: 
                      - "*"
            NotificationConfiguration: 
                LambdaConfigurations: 
                  - 
                    Event: "s3:ObjectCreated:Put"
                    Filter: 
                        S3Key: 
                            Rules: 
                              - 
                                Name: "Prefix"
                                Value: ""
                              - 
                                Name: "Suffix"
                                Value: ""
                    Function: !GetAtt LambdaFunction2.Arn

    S3Bucket3:
        Type: "AWS::S3::Bucket"
        DeletionPolicy: Retain
        Properties:
            BucketName: "hw2-cloud-dc4676-deploy"

    ApiGatewayRestApi:
        Type: "AWS::ApiGateway::RestApi"
        DeletionPolicy: Retain
        Properties:
            Name: "AI Photo Search"
            Description: "AI Photo Search application, built during the Cloud and Big Data course at Columbia University."
            ApiKeySourceType: "HEADER"
            EndpointConfiguration: 
                Types: 
                  - "REGIONAL"

    CodeBuildProject:
        Type: "AWS::CodeBuild::Project"
        DeletionPolicy: Retain
        Properties:
            Name: "cloud-lambda-build"
            Source: 
                BuildSpec: "buildspec.yml"
                GitCloneDepth: 1
                GitSubmodulesConfig: 
                    FetchSubmodules: false
                InsecureSsl: false
                Location: "https://github.com/DarylTC/cloud-hw2-photoAlbum"
                ReportBuildStatus: false
                Type: "GITHUB"
            Artifacts: 
                Type: "NO_ARTIFACTS"
            Cache: 
                Type: "NO_CACHE"
            Environment: 
                ComputeType: "BUILD_GENERAL1_SMALL"
                Image: "aws/codebuild/standard:6.0"
                ImagePullCredentialsType: "CODEBUILD"
                PrivilegedMode: false
                Type: "LINUX_CONTAINER"
            ServiceRole: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/codebuild-cloud-lambda-service-role"
            TimeoutInMinutes: 60
            QueuedTimeoutInMinutes: 480
            EncryptionKey: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/s3"
            BadgeEnabled: false
            LogsConfig: 
                CloudWatchLogs: 
                    Status: "ENABLED"
                S3Logs: 
                    Status: "DISABLED"
                    EncryptionDisabled: false
            Visibility: "PRIVATE"

    CodePipelinePipeline:
        Type: "AWS::CodePipeline::Pipeline"
        DeletionPolicy: Retain
        Properties:
            Name: "hw2-cloud-lambda-deploy-pipeline"
            RoleArn: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/AWSCodePipelineServiceRole-${AWS::Region}-hw2-cloud-lambda-deploy-pi"
            ArtifactStore: 
                Location: !Sub "codepipeline-${AWS::Region}-661523498919"
                Type: "S3"
            Stages: 
              - 
                Name: "Source"
                Actions: 
                  - 
                    Name: "Source"
                    ActionTypeId: 
                        Category: "Source"
                        Owner: "AWS"
                        Provider: "CodeStarSourceConnection"
                        Version: "1"
                    Configuration: 
                        BranchName: "main"
                        ConnectionArn: !Sub "arn:aws:codestar-connections:${AWS::Region}:${AWS::AccountId}:connection/e8d91fa6-698b-4c3b-b5da-8e3b3c16b162"
                        FullRepositoryId: "DarylTC/cloud-hw2-photoAlbum"
                        OutputArtifactFormat: "CODE_ZIP"
                    OutputArtifacts: 
                      - 
                        Name: "SourceArtifact"
                    Region: !Ref AWS::Region
                    Namespace: "SourceVariables"
                    RunOrder: 1
              - 
                Name: "Build"
                Actions: 
                  - 
                    Name: "Build"
                    ActionTypeId: 
                        Category: "Build"
                        Owner: "AWS"
                        Provider: "CodeBuild"
                        Version: "1"
                    Configuration: 
                        ProjectName: !Ref CodeBuildProject
                    InputArtifacts: 
                      - 
                        Name: "SourceArtifact"
                    OutputArtifacts: 
                      - 
                        Name: "BuildArtifact"
                    Region: !Ref AWS::Region
                    Namespace: "BuildVariables"
                    RunOrder: 1

    CodePipelinePipeline2:
        Type: "AWS::CodePipeline::Pipeline"
        DeletionPolicy: Retain
        Properties:
            Name: "P2"
            RoleArn: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/admin"
            ArtifactStore: 
                Location: !Ref S3Bucket
                Type: "S3"
            Stages: 
              - 
                Name: "Source"
                Actions: 
                  - 
                    Name: "Source"
                    ActionTypeId: 
                        Category: "Source"
                        Owner: "AWS"
                        Provider: "CodeStarSourceConnection"
                        Version: "1"
                    Configuration: 
                        BranchName: "main"
                        ConnectionArn: !Sub "arn:aws:codestar-connections:${AWS::Region}:${AWS::AccountId}:connection/d8f059f8-7843-4d7f-b0f4-085964a0fce9"
                        FullRepositoryId: "DarylTC/cloud-hw2-photoAlbum"
                        OutputArtifactFormat: "CODE_ZIP"
                    OutputArtifacts: 
                      - 
                        Name: "SourceArtifact"
                    Region: !Ref AWS::Region
                    Namespace: "SourceVariables"
                    RunOrder: 1
              - 
                Name: "Deploy"
                Actions: 
                  - 
                    Name: "Deploy"
                    ActionTypeId: 
                        Category: "Deploy"
                        Owner: "AWS"
                        Provider: "S3"
                        Version: "1"
                    Configuration: 
                        BucketName: !Ref S3Bucket
                        Extract: "false"
                        ObjectKey: "Frontend/Code/*"
                    InputArtifacts: 
                      - 
                        Name: "SourceArtifact"
                    Region: !Ref AWS::Region
                    Namespace: "DeployVariables"
                    RunOrder: 1

    OpenSearchServiceDomain:
        Type: "AWS::OpenSearchService::Domain"
        DeletionPolicy: Retain
        Properties:
            DomainName: "photos"
            EngineVersion: "OpenSearch_1.3"
            ClusterConfig: 
                ColdStorageOptions: 
                    Enabled: false
                DedicatedMasterEnabled: false
                InstanceCount: 3
                InstanceType: "t3.small.elasticsearch"
                ZoneAwarenessEnabled: false
                WarmEnabled: false
            AccessPolicies: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"es:*\",\"Resource\":\"arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/photos/*\"}]}"
            SnapshotOptions: {}
            snapshot_options: {}
            EncryptionAtRestOptions: 
                Enabled: true
                KmsKeyId: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/9a8fcee9-906a-411c-a31f-b0c4710ae2f7"
            NodeToNodeEncryptionOptions: 
                Enabled: true
            AdvancedOptions: 
                "indices.fielddata.cache.size": "20"
                "indices.query.bool.max_clause_count": "1024"
                override_main_response_version: "false"
                "rest.action.multi.allow_explicit_index": "true"
            EBSOptions: 
                EBSEnabled: true
                VolumeType: "gp3"
                VolumeSize: 10
                Iops: 3000
                Throughput: 125
            CognitoOptions: 
                Enabled: false
            DomainEndpointOptions: 
                EnforceHTTPS: true
                TLSSecurityPolicy: "Policy-Min-TLS-1-0-2019-07"
                CustomEndpointEnabled: false
            AdvancedSecurityOptions: 
                Enabled: true
                InternalUserDatabaseEnabled: true
                AnonymousAuthEnabled: false

